<!-- rb_include_scripts -->
<%= stylesheet_link_tag 'jquery/jquery.jqplot.min.css', :plugin => 'redmine_backlogs' %>
<%= if (! ((Redmine::VERSION::MAJOR == 2) && (Redmine::VERSION::MINOR >= 1)) ||
          (Redmine::VERSION::MAJOR > 2)
       ) || (controller.is_a? RbApplicationController)
      # javascript_include_tag 'jquery/jquery-1.7.2-ui-1.8.21-ujs-2.0.3.js', :plugin => 'redmine_backlogs'
    end

    # redmine uses new jquery, need some compat libs
    if ((Redmine::VERSION::MAJOR == 2) && (Redmine::VERSION::MINOR >= 5)) ||
          (Redmine::VERSION::MAJOR > 2)
      javascript_include_tag('jquery/jquery.jqplot/jquery.browser.js', :plugin => 'redmine_backlogs')
    end
%>
<%= javascript_include_tag 'jquery-migrate-1.2.1.js', :plugin => 'redmine_backlogs' %>
<%= javascript_include_tag 'jquery/jquery.verticalfix-min.js', :plugin => 'redmine_backlogs' %>
<!--[if IE]>
<%= javascript_include_tag 'jquery/jquery.jqplot/excanvas.js', :plugin => 'redmine_backlogs' %>
<![endif]-->
<%= javascript_include_tag('jquery/jquery.jqplot/jquery.jqplot.js',
      'jquery/jquery.jqplot/plugins/jqplot.highlighter.js',
      'jquery/jquery.jqplot/plugins/jqplot.canvasTextRenderer.min.js',
      'jquery/jquery.jqplot/plugins/jqplot.canvasAxisTickRenderer.min.js',
      'jquery/jquery.jqplot/plugins/jqplot.enhancedLegendRenderer.min.js',
      'jquery/jquery.jqplot/plugins/jqplot.dateAxisRenderer.min.js',
      'jquery/jquery.cookie.js',
      :plugin => 'redmine_backlogs') %>

<%# render the javascript_include_tags which must come before noConflict %>
<%= controller.rb_jquery_plugins if controller.respond_to?('rb_jquery_plugins') %>
<%# load our framework, it initializes the namespace and jquery.noConflict %>
<%= javascript_include_tag 'common.js', :plugin => 'redmine_backlogs' %>
<script type="text/javascript"
        src="<%= url_for(:controller => 'rb_server_variables',
                         :action => 'index', :format => 'js') %>">
</script>
<%= javascript_include_tag 'burndown.js', :plugin => 'redmine_backlogs' %>
<% start_of_week = Setting.start_of_week
   start_of_week = l(:general_first_day_of_week, :default => '1') if start_of_week.blank?
   # Redmine uses 1..7 (monday..sunday) in settings and locales
   # JQuery uses 0..6 (sunday..saturday), 7 needs to be changed to 0
   start_of_week = start_of_week.to_i % 7 %>
<%= javascript_tag(
       "
       function beforeShowDatePicker2(input, inst) {
  var default_date = null;
  switch ($(input).attr(\"id\")) {
    case \"issue_start_date\" :
      if ($(\"#issue_due_date\").size() > 0) {
    default_date = $(\"#issue_due_date\").val();
    }
    break;
    case \"issue_due_date\" :
    if ($(\"#issue_start_date\").size() > 0) {
        var start_date = $(\"#issue_start_date\").val();
    if (start_date != \"\") {
        start_date = new Date(Date.parse(start_date));
    if (start_date > new Date()) {
        default_date = $(\"#issue_start_date\").val();
    }
    }
    }
    break;
    }
    $(input).datepickerFallback(\"option\", \"defaultDate\", default_date);
    }
       var datepickerOptions2={dateFormat: 'yy-mm-dd', firstDay: #{start_of_week}, " +
           "showOn: 'button', buttonImageOnly: true, buttonImage: '" +
           path_to_image('/images/calendar.png') +
           "', showButtonPanel: true, showWeek: true, showOtherMonths: true, " +
           "selectOtherMonths: true, changeMonth: true, changeYear: true, " +
           "beforeShow:beforeShowDatePicker2};") %>
<%= javascript_include_tag 'changeDate.js', :plugin => 'redmine_backlogs' %>
